"""Initialize the 'node' and 'link' tables in the MeshMap database.

Revision ID: 7737b0856caa
Revises:
Create Date: 2020-12-29 13:32:53.206903

"""
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision = "7737b0856caa"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "node",
        sa.Column("node_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=70), nullable=False),
        sa.Column(
            "status", sa.Enum("ACTIVE", "INACTIVE", name="nodestatus"), nullable=False
        ),
        sa.Column("wlan_ip", sa.String(length=15), nullable=False),
        sa.Column("description", sa.Unicode(length=200), nullable=False),
        sa.Column("wlan_mac_address", sa.String(length=12), nullable=False),
        sa.Column("last_seen", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("up_time", sa.String(length=25), nullable=False),
        sa.Column(
            "load_averages", postgresql.ARRAY(sa.Float(), dimensions=1), nullable=True
        ),
        sa.Column("model", sa.String(length=50), nullable=False),
        sa.Column("board_id", sa.String(length=50), nullable=False),
        sa.Column("firmware_version", sa.String(length=50), nullable=False),
        sa.Column("firmware_manufacturer", sa.String(length=100), nullable=False),
        sa.Column("api_version", sa.String(length=5), nullable=False),
        sa.Column("latitude", sa.Float(), nullable=True),
        sa.Column("longitude", sa.Float(), nullable=True),
        sa.Column("grid_square", sa.String(length=20), nullable=False),
        sa.Column("ssid", sa.String(length=50), nullable=False),
        sa.Column("channel", sa.String(length=50), nullable=False),
        sa.Column("channel_bandwidth", sa.String(length=50), nullable=False),
        sa.Column("band", sa.String(length=25), nullable=False),
        sa.Column("services", postgresql.JSON(astext_type=sa.Text()), nullable=False),
        sa.Column("tunnel_installed", sa.Boolean(), nullable=False),
        sa.Column("active_tunnel_count", sa.Integer(), nullable=False),
        sa.Column(
            "system_info", postgresql.JSON(astext_type=sa.Text()), nullable=False
        ),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("last_updated_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("node_id", name=op.f("pk_node")),
    )
    op.create_index(
        "active_ip",
        "node",
        ["wlan_ip"],
        unique=True,
        postgresql_where=sa.text("status = 'ACTIVE'"),
    )
    op.create_index(
        "active_mac",
        "node",
        ["wlan_mac_address"],
        unique=True,
        postgresql_where=sa.text("status = 'ACTIVE'"),
    )
    op.create_index(
        "active_name",
        "node",
        ["name"],
        unique=True,
        postgresql_where=sa.text("status = 'ACTIVE'"),
    )
    op.create_table(
        "link",
        sa.Column("source_id", sa.Integer(), nullable=False),
        sa.Column("destination_id", sa.Integer(), nullable=False),
        sa.Column(
            "status",
            sa.Enum("CURRENT", "RECENT", "INACTIVE", name="linkstatus"),
            nullable=False,
        ),
        sa.Column("last_seen", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("olsr_cost", sa.Float(), nullable=True),
        sa.Column("distance", sa.Float(), nullable=True),
        sa.Column("bearing", sa.Float(), nullable=True),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("last_updated_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["destination_id"],
            ["node.node_id"],
            name=op.f("fk_link_destination_id_node"),
        ),
        sa.ForeignKeyConstraint(
            ["source_id"], ["node.node_id"], name=op.f("fk_link_source_id_node")
        ),
        sa.PrimaryKeyConstraint("source_id", "destination_id", name=op.f("pk_link")),
    )
    op.create_index(
        "recent_links",
        "link",
        ["status"],
        unique=False,
        postgresql_where=sa.text("status IN ('CURRENT', 'RECENT')"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("recent_links", table_name="link")
    op.drop_table("link")
    op.drop_index("active_name", table_name="node")
    op.drop_index("active_mac", table_name="node")
    op.drop_index("active_ip", table_name="node")
    op.drop_table("node")
    # ### end Alembic commands ###
